{%- style -%}
  {% render 'section-style' %}

  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
  
  .auto-text {
    text-align: center;
  }

{%- endstyle -%}


    <div class="auto-text color-{{ section.settings.color_scheme }}{% if section.settings.title == blank %} no-heading{% endif %}">
      <div class="page-width section-{{ section.id }}-padding">
          <{{ section.settings.heading_tag }} class="title {{ section.settings.heading_size }}">
            {{ section.settings.title }}
            <span style="color:{{section.settings.color_typewriter_text}};" class="typewrite title h1" data-period="2000" data-type='[ {{section.settings.typewriter_text}} ]'>
              <span class="wrap"></span>
            </span>
          </{{ section.settings.heading_tag }}>
            
      </div>
    </div>


{% schema %}
  {
    "name": "Texte dynamique",
    "class": "section",
    "tag": "section",
    "settings": [
        {
          "type": "select",
          "id": "color_scheme",
          "options": [
            {
              "value": "accent-1",
              "label": "t:sections.all.colors.accent_1.label"
            },
            {
              "value": "accent-2",
              "label": "t:sections.all.colors.accent_2.label"
            },
            {
              "value": "background-1",
              "label": "t:sections.all.colors.background_1.label"
            },
            {
              "value": "background-2",
              "label": "t:sections.all.colors.background_2.label"
            },
            {
              "value": "inverse",
              "label": "t:sections.all.colors.inverse.label"
            }
          ],
          "default": "background-1",
          "label": "t:sections.all.colors.label"
        },
        {
          "type": "textarea",
          "id": "title",
          "label": "t:sections.multicolumn.settings.title.label",
    	  "default": "Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet."
        },
        {
          "type": "select",
          "id": "heading_tag",
          "options": [
            {
              "value": "h1",
              "label": "h1"
            },
            {
              "value": "h2",
              "label": "h2"
            },
            {
              "value": "h3",
              "label": "h3"
            },
            {
              "value": "span",
              "label": "Aucune"
            }
          ],
          "default": "h2",
          "label": "Balise titre (SEO)"
        },
        {
          "type": "select",
          "id": "heading_size",
          "options": [
            {
              "value": "h2",
              "label": "t:sections.all.heading_size.options__1.label"
            },
            {
              "value": "h1",
              "label": "t:sections.all.heading_size.options__2.label"
            },
            {
              "value": "h0",
              "label": "t:sections.all.heading_size.options__3.label"
            }
          ],
          "default": "h2",
          "label": "t:sections.all.heading_size.label"
        },
		{
			"type":"textarea",
			"id":"typewriter_text",
			"label":"Texte dynamique",
			"info":"Veuillez ajouter du texte au format JSON"
		},
		{
			"type":"color",
			"id":"color_typewriter_text",
			"label":"Couleur du texte",
			"default":"#F56900"
		},
        {
          "type": "header",
          "content": "t:sections.all.padding.section_padding_heading"
        },
        {
          "type": "range",
          "id": "padding_top",
          "min": 0,
          "max": 100,
          "step": 2,
          "unit": "px",
          "label": "t:sections.all.padding.padding_top",
          "default": 30
        },
        {
          "type": "range",
          "id": "padding_bottom",
          "min": 0,
          "max": 100,
          "step": 2,
          "unit": "px",
          "label": "t:sections.all.padding.padding_bottom",
          "default": 30
        },
        {
          "type": "header",
          "content": "Ordinateur"
        },
        {
          "type": "checkbox",
          "id": "offdesk",
          "default": false,
          "label": "Cacher la section"
        },
        {
          "type": "header",
          "content": "Mobile"
        },
        {
          "type": "checkbox",
          "id": "offmob",
          "default": false,
          "label": "Cacher la section"
        }  
	],
    "presets": [
      {
        "name": "Texte dynamique"
      }
    ]
  }
{% endschema %}


{% javascript %}

 var TxtType = function(el, toRotate, period) {
        this.toRotate = toRotate;
        this.el = el;
        this.loopNum = 0;
        this.period = parseInt(period, 10) || 2000;
        this.txt = '';
        this.tick();
        this.isDeleting = false;
    };

    TxtType.prototype.tick = function() {
        var i = this.loopNum % this.toRotate.length;
        var fullTxt = this.toRotate[i];

        if (this.isDeleting) {
        this.txt = fullTxt.substring(0, this.txt.length - 1);
        } else {
        this.txt = fullTxt.substring(0, this.txt.length + 1);
        }

        this.el.innerHTML = '<span class="wrap">'+this.txt+'</span>';

        var that = this;
        var delta = 200 - Math.random() * 100;

        if (this.isDeleting) { delta /= 2; }

        if (!this.isDeleting && this.txt === fullTxt) {
        delta = this.period;
        this.isDeleting = true;
        } else if (this.isDeleting && this.txt === '') {
        this.isDeleting = false;
        this.loopNum++;
        delta = 500;
        }

        setTimeout(function() {
        that.tick();
        }, delta);
    };

    window.onload = function() {
        var elements = document.getElementsByClassName('typewrite');
        for (var i=0; i<elements.length; i++) {
            var toRotate = elements[i].getAttribute('data-type');
            var period = elements[i].getAttribute('data-period');
            if (toRotate) {
              new TxtType(elements[i], JSON.parse(toRotate), period);
            }
        }
        // INJECT CSS
        var css = document.createElement("style");
        css.type = "text/css";
        css.innerHTML = ".typewrite > .wrap { border-right: 0.08em solid #fff}";
        document.body.appendChild(css);
    };


  
{% endjavascript %}